name: Reusable Docker Build and Push

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
        description: "Name of the service"
      dockerfile-path:
        required: true
        type: string
        description: "Path to the Dockerfile"
      build-context:
        required: false
        type: string
        default: "."
        description: "Docker build context"
      registry:
        required: false
        type: string
        default: "ghcr.io"
        description: "Container registry URL"
      image-name:
        required: false
        type: string
        description: "Override default image name (default: repository-name/service-name)"
    outputs:
      image-tag:
        description: "The tag of the built Docker image"
        value: ${{ jobs.build-and-push.outputs.image-tag }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate image name
        id: image-name
        run: |
          if [ -n "${{ inputs.image-name }}" ]; then
            echo "name=${{ inputs.image-name }}" >> $GITHUB_OUTPUT
          else
            REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
            echo "name=$REPO_NAME/${{ inputs.service-name }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ steps.image-name.outputs.name }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.build-context }}
          file: ${{ inputs.dockerfile-path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ANGULAR_ENV=dev
        
      - name: Extract short SHA tag
        id: short-sha
        run: |
          SHA_TAG=$(echo "${{ steps.meta.outputs.tags }}" | grep "sha-" | head -n 1)
          echo "tag=$SHA_TAG" >> $GITHUB_OUTPUT
