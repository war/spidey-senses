name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ develop, feature/**, bugfix/** ]
  pull_request:
    branches: [ main, develop, release/** ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: src/frontend/spider-control-web/package-lock.json
    
    - name: Install dependencies
      working-directory: src/frontend/spider-control-web/
      run: npm ci
    
    # - name: Lint
    #   working-directory: src/frontend/spider-control-web/
    #   run: npm run lint
    
    - name: Build
      working-directory: src/frontend/spider-control-web/
      run: npm run build --if-present
    
    # - name: Test
    #   working-directory: src/frontend/spider-control-web/
    #   run: npm test -- --no-watch --no-progress --browsers=ChromeHeadless
    
  build-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/frontend
        tags: |
          type=ref,event=branch
          type=sha,format=short
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/frontend/angular/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
  test-container:
    needs: build-docker
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Pull Docker image
      run: docker pull ${{ steps.meta.outputs.tags[0] }}
    
    - name: Run container tests
      run: |
        docker run --name frontend-test -d -p 4200:80 ghcr.io/${{ github.repository }}/frontend:sha-${{ github.sha }}
        sleep 5
        curl -sSf http://localhost:4200/ || exit 1
        docker logs frontend-test
